{"ast":null,"code":"var _jsxFileName = \"/Users/jamieanderson/Eat The Blocks/dex/client/src/LoadingContainer.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { getWeb3, getContracts } from './utils.js';\nimport App from './App.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction LoadingContainer() {\n  _s();\n\n  const [web3, setWeb3] = useState(undefined);\n  const [accounts, setAccounts] = useState([]);\n  const [contracts, setContracts] = useState(undefined);\n  useEffect(() => {\n    const init = async () => {\n      const web3 = await getWeb3();\n      const contracts = await getContracts(web3);\n      const accounts = await web3.eth.getAccounts();\n      setWeb3(web3);\n      setContracts(contracts);\n      setAccounts(accounts);\n    };\n\n    init(); // eslint-disable-next-line\n  }, []);\n\n  const isReady = () => {\n    return typeof web3 !== 'undefined' && typeof contracts !== 'undefined' && accounts.length > 0;\n  };\n\n  if (!isReady()) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(App, {\n    web3: web3,\n    accounts: accounts,\n    contracts: contracts\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 10\n  }, this);\n}\n\n_s(LoadingContainer, \"tjTinJMoyo9G/tDf6XhmoOxe/AQ=\");\n\n_c = LoadingContainer;\nexport default LoadingContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoadingContainer\");","map":{"version":3,"sources":["/Users/jamieanderson/Eat The Blocks/dex/client/src/LoadingContainer.jsx"],"names":["React","useState","useEffect","getWeb3","getContracts","App","LoadingContainer","web3","setWeb3","undefined","accounts","setAccounts","contracts","setContracts","init","eth","getAccounts","isReady","length"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,OAAT,EAAkBC,YAAlB,QAAsC,YAAtC;AACA,OAAOC,GAAP,MAAgB,UAAhB;;;AAEA,SAASC,gBAAT,GAA4B;AAAA;;AAC1B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAACQ,SAAD,CAAhC;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACW,SAAD,EAAYC,YAAZ,IAA4BZ,QAAQ,CAACQ,SAAD,CAA1C;AAEAP,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMY,IAAI,GAAG,YAAY;AACvB,YAAMP,IAAI,GAAG,MAAMJ,OAAO,EAA1B;AACA,YAAMS,SAAS,GAAG,MAAMR,YAAY,CAACG,IAAD,CAApC;AACA,YAAMG,QAAQ,GAAG,MAAMH,IAAI,CAACQ,GAAL,CAASC,WAAT,EAAvB;AACAR,MAAAA,OAAO,CAACD,IAAD,CAAP;AACAM,MAAAA,YAAY,CAACD,SAAD,CAAZ;AACAD,MAAAA,WAAW,CAACD,QAAD,CAAX;AACD,KAPD;;AAQAI,IAAAA,IAAI,GATU,CAUd;AACD,GAXQ,EAWN,EAXM,CAAT;;AAaA,QAAMG,OAAO,GAAG,MAAM;AACpB,WACE,OAAOV,IAAP,KAAgB,WAAhB,IACA,OAAOK,SAAP,KAAqB,WADrB,IAEAF,QAAQ,CAACQ,MAAT,GAAkB,CAHpB;AAKD,GAND;;AAQA,MAAI,CAACD,OAAO,EAAZ,EAAgB;AACd,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,sBAAO,QAAC,GAAD;AAAK,IAAA,IAAI,EAAEV,IAAX;AAAiB,IAAA,QAAQ,EAAEG,QAA3B;AAAqC,IAAA,SAAS,EAAEE;AAAhD;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;GA/BQN,gB;;KAAAA,gB;AAiCT,eAAeA,gBAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { getWeb3, getContracts } from './utils.js';\nimport App from './App.js';\n\nfunction LoadingContainer() {\n  const [web3, setWeb3] = useState(undefined);\n  const [accounts, setAccounts] = useState([]);\n  const [contracts, setContracts] = useState(undefined);\n\n  useEffect(() => {\n    const init = async () => {\n      const web3 = await getWeb3();\n      const contracts = await getContracts(web3);\n      const accounts = await web3.eth.getAccounts();\n      setWeb3(web3);\n      setContracts(contracts);\n      setAccounts(accounts);\n    };\n    init();\n    // eslint-disable-next-line\n  }, []);\n\n  const isReady = () => {\n    return (\n      typeof web3 !== 'undefined' &&\n      typeof contracts !== 'undefined' &&\n      accounts.length > 0\n    );\n  };\n\n  if (!isReady()) {\n    return <div>Loading...</div>;\n  }\n\n  return <App web3={web3} accounts={accounts} contracts={contracts} />;\n}\n\nexport default LoadingContainer;\n"]},"metadata":{},"sourceType":"module"}